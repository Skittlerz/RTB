<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting canClick to true
global.canClick=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting physics
if (global.physicsEnabled){
    with(objPlanet){
        //x and y of the planet position, left of the rectangle, top of the rectangle, right of the rectangle, bottom of the rectangle
        //checking if the planet is still in the ui selection tool
        if(!point_in_rectangle(x,y,0,648,352,760)) {
            var phyPlanet;
            phyPlanet = physics_fixture_create();
            physics_fixture_set_circle_shape(phyPlanet, (sprite_get_width(sprMoon) / 2));
            physics_fixture_set_density(phyPlanet, 0);
            physics_fixture_set_collision_group(phyPlanet, 1);
            physics_fixture_bind(phyPlanet, id);
            physics_fixture_delete(phyPlanet);
            image_speed = 0.4;
        }
    }
    
    with(objAsteroid1){
        //x and y of the planet position, left of the rectangle, top of the rectangle, right of the rectangle, bottom of the rectangle
        //checking if the planet is still in the ui selection tool
        if(!point_in_rectangle(x,y,0,648,352,760)) {
            var phyAsteroid;
            phyAsteroid = physics_fixture_create();
            physics_fixture_set_circle_shape(phyAsteroid, (sprite_get_width(sprAsteroid1) / 2));
            physics_fixture_set_density(phyAsteroid, 0);
            physics_fixture_set_collision_group(phyAsteroid, 1);
            physics_fixture_bind(phyAsteroid, id);
            physics_fixture_delete(phyAsteroid);
            image_speed = 0.4;
        }
    }
    
    with(objPlayer) {
        if(global.roomNum == 4)
        {
            physics_apply_force(x,y,200,0);
        }
        else if (global.roomNum == 5)
        {
            physics_apply_force(x,y,200,50);
        }
        else 
        {
            physics_apply_force(x,y,200,0);
        }
    }
    
}
else {
    show_debug_message("Failed!!!!");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling click release
//Can now select a planet
global.canSelect=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handling click events

if (global.canClick) {
    //Disabling clicking on the button again
    global.canClick = false;
    //Disabling selecting a planet
    global.canSelect = false;
    //Changing the button sprite
    sprite_index = sprPlay2;
    //Enabling physics
    global.physicsEnabled = true;
    //Calling the alarm that sets physics up
    alarm[0] = 10;
    
    with(objtext){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
